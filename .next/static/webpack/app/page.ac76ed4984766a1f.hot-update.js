"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/operate/BlueprintMicroGrid.tsx":
/*!***************************************************!*\
  !*** ./components/operate/BlueprintMicroGrid.tsx ***!
  \***************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BlueprintMicroGrid: function() { return /* binding */ BlueprintMicroGrid; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ BlueprintMicroGrid auto */ \nvar _s = $RefreshSig$();\n\nfunction BlueprintMicroGrid(param) {\n    let { className = \"\", opacity = 0.08, parallaxOffset = 2, spacing = 20, intensityScale = false, centerOpacity = 0.03, edgeOpacity = 0.12, reduceContrast = false } = param;\n    _s();\n    const [scrollY, setScrollY] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const handleScroll = ()=>{\n            if (containerRef.current) {\n                const rect = containerRef.current.getBoundingClientRect();\n                const elementTop = rect.top;\n                const elementHeight = rect.height;\n                const windowHeight = window.innerHeight;\n                // Only animate when element is in viewport\n                if (elementTop < windowHeight && elementTop + elementHeight > 0) {\n                    const progress = Math.max(0, Math.min(1, (windowHeight - elementTop) / (windowHeight + elementHeight)));\n                    setScrollY(progress * parallaxOffset);\n                }\n            }\n        };\n        // Throttle scroll events\n        let ticking = false;\n        const throttledScroll = ()=>{\n            if (!ticking) {\n                requestAnimationFrame(()=>{\n                    handleScroll();\n                    ticking = false;\n                });\n                ticking = true;\n            }\n        };\n        window.addEventListener(\"scroll\", throttledScroll, {\n            passive: true\n        });\n        return ()=>window.removeEventListener(\"scroll\", throttledScroll);\n    }, [\n        parallaxOffset\n    ]);\n    // Generate clean blueprint grid pattern\n    const generateBlueprintPattern = ()=>{\n        const elements = [];\n        // Main grid lines\n        const cols = Math.ceil(1200 / spacing);\n        const rows = Math.ceil(800 / spacing);\n        // Vertical lines\n        for(let i = 0; i <= cols; i++){\n            elements.push(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"line\", {\n                x1: i * spacing,\n                y1: 0,\n                x2: i * spacing,\n                y2: 800,\n                stroke: \"currentColor\",\n                strokeWidth: \"1\",\n                opacity: opacity\n            }, \"v-\".concat(i), false, {\n                fileName: \"/Users/brady/Code/tsg/Technology-Strategy-Group-Website/components/operate/BlueprintMicroGrid.tsx\",\n                lineNumber: 72,\n                columnNumber: 9\n            }, this));\n        }\n        // Horizontal lines\n        for(let i = 0; i <= rows; i++){\n            elements.push(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"line\", {\n                x1: 0,\n                y1: i * spacing + scrollY,\n                x2: 1200,\n                y2: i * spacing + scrollY,\n                stroke: \"currentColor\",\n                strokeWidth: \"1\",\n                opacity: opacity\n            }, \"h-\".concat(i), false, {\n                fileName: \"/Users/brady/Code/tsg/Technology-Strategy-Group-Website/components/operate/BlueprintMicroGrid.tsx\",\n                lineNumber: 88,\n                columnNumber: 9\n            }, this));\n        }\n        // Diagonal lines - simple pattern\n        const diagonalSpacing = spacing * 2;\n        for(let i = 0; i < 1200; i += diagonalSpacing){\n            for(let j = 0; j < 800; j += diagonalSpacing){\n                // Diagonal from top-left to bottom-right\n                elements.push(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"line\", {\n                    x1: i,\n                    y1: j,\n                    x2: i + diagonalSpacing,\n                    y2: j + diagonalSpacing,\n                    stroke: \"currentColor\",\n                    strokeWidth: \"0.8\",\n                    opacity: opacity * 0.7\n                }, \"diag1-\".concat(i, \"-\").concat(j), false, {\n                    fileName: \"/Users/brady/Code/tsg/Technology-Strategy-Group-Website/components/operate/BlueprintMicroGrid.tsx\",\n                    lineNumber: 107,\n                    columnNumber: 11\n                }, this));\n                // Diagonal from top-right to bottom-left\n                elements.push(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"line\", {\n                    x1: i + diagonalSpacing,\n                    y1: j,\n                    x2: i,\n                    y2: j + diagonalSpacing,\n                    stroke: \"currentColor\",\n                    strokeWidth: \"0.8\",\n                    opacity: opacity * 0.7\n                }, \"diag2-\".concat(i, \"-\").concat(j), false, {\n                    fileName: \"/Users/brady/Code/tsg/Technology-Strategy-Group-Website/components/operate/BlueprintMicroGrid.tsx\",\n                    lineNumber: 121,\n                    columnNumber: 11\n                }, this));\n            }\n        }\n        return elements;\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: containerRef,\n        className: \"absolute inset-0 pointer-events-none overflow-hidden \".concat(className),\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute inset-0 bg-gradient-to-b from-blue-900/20 via-blue-900/10 to-transparent pointer-events-none z-10\"\n            }, void 0, false, {\n                fileName: \"/Users/brady/Code/tsg/Technology-Strategy-Group-Website/components/operate/BlueprintMicroGrid.tsx\",\n                lineNumber: 144,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute inset-0 bg-[radial-gradient(70%_60%_at_50%_50%,transparent_0%,transparent_45%,rgba(0,0,40,.20)_100%)] pointer-events-none z-20\"\n            }, void 0, false, {\n                fileName: \"/Users/brady/Code/tsg/Technology-Strategy-Group-Website/components/operate/BlueprintMicroGrid.tsx\",\n                lineNumber: 147,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                className: \"w-full h-full text-white \".concat(reduceContrast ? \"mix-blend-soft-light\" : \"\"),\n                viewBox: \"0 0 1200 800\",\n                preserveAspectRatio: \"xMidYMid slice\",\n                style: {\n                    transform: \"translateY(\".concat(scrollY * 0.9, \"px)\"),\n                    transition: \"transform 0.1s ease-out\"\n                },\n                children: generateBlueprintPattern()\n            }, void 0, false, {\n                fileName: \"/Users/brady/Code/tsg/Technology-Strategy-Group-Website/components/operate/BlueprintMicroGrid.tsx\",\n                lineNumber: 150,\n                columnNumber: 7\n            }, this),\n            intensityScale && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute inset-0 bg-blue-600/0 mx-auto max-w-5xl pointer-events-none z-30\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"absolute inset-0 bg-blue-600/20\"\n                }, void 0, false, {\n                    fileName: \"/Users/brady/Code/tsg/Technology-Strategy-Group-Website/components/operate/BlueprintMicroGrid.tsx\",\n                    lineNumber: 165,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/brady/Code/tsg/Technology-Strategy-Group-Website/components/operate/BlueprintMicroGrid.tsx\",\n                lineNumber: 164,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/brady/Code/tsg/Technology-Strategy-Group-Website/components/operate/BlueprintMicroGrid.tsx\",\n        lineNumber: 139,\n        columnNumber: 5\n    }, this);\n}\n_s(BlueprintMicroGrid, \"ZPoL1qNsLGDANWfifMPxB108mHs=\");\n_c = BlueprintMicroGrid;\nvar _c;\n$RefreshReg$(_c, \"BlueprintMicroGrid\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/operate/BlueprintMicroGrid.tsx\n"));

/***/ })

});