"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/operate/BlueprintMicroGrid.tsx":
/*!***************************************************!*\
  !*** ./components/operate/BlueprintMicroGrid.tsx ***!
  \***************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BlueprintMicroGrid: function() { return /* binding */ BlueprintMicroGrid; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ BlueprintMicroGrid auto */ \nvar _s = $RefreshSig$();\n\nfunction BlueprintMicroGrid(param) {\n    let { className = \"\", opacity = 0.4, parallaxOffset = 2, spacing = 20 } = param;\n    _s();\n    const [scrollY, setScrollY] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const handleScroll = ()=>{\n            if (containerRef.current) {\n                const rect = containerRef.current.getBoundingClientRect();\n                const elementTop = rect.top;\n                const elementHeight = rect.height;\n                const windowHeight = window.innerHeight;\n                // Only animate when element is in viewport\n                if (elementTop < windowHeight && elementTop + elementHeight > 0) {\n                    const progress = Math.max(0, Math.min(1, (windowHeight - elementTop) / (windowHeight + elementHeight)));\n                    setScrollY(progress * parallaxOffset);\n                }\n            }\n        };\n        // Throttle scroll events\n        let ticking = false;\n        const throttledScroll = ()=>{\n            if (!ticking) {\n                requestAnimationFrame(()=>{\n                    handleScroll();\n                    ticking = false;\n                });\n                ticking = true;\n            }\n        };\n        window.addEventListener(\"scroll\", throttledScroll, {\n            passive: true\n        });\n        return ()=>window.removeEventListener(\"scroll\", throttledScroll);\n    }, [\n        parallaxOffset\n    ]);\n    // Generate blueprint grid pattern\n    const generateGridPattern = ()=>{\n        const lines = [];\n        const cols = Math.ceil(1200 / spacing);\n        const rows = Math.ceil(800 / spacing);\n        // Vertical lines\n        for(let i = 0; i <= cols; i++){\n            lines.push(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"line\", {\n                x1: i * spacing,\n                y1: 0,\n                x2: i * spacing,\n                y2: 800,\n                stroke: \"currentColor\",\n                strokeWidth: \"0.5\",\n                opacity: opacity\n            }, \"v-\".concat(i), false, {\n                fileName: \"/Users/brady/Code/tsg/Technology-Strategy-Group-Website/components/operate/BlueprintMicroGrid.tsx\",\n                lineNumber: 62,\n                columnNumber: 9\n            }, this));\n        }\n        // Horizontal lines\n        for(let i = 0; i <= rows; i++){\n            lines.push(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"line\", {\n                x1: 0,\n                y1: i * spacing + scrollY,\n                x2: 1200,\n                y2: i * spacing + scrollY,\n                stroke: \"currentColor\",\n                strokeWidth: \"0.5\",\n                opacity: opacity\n            }, \"h-\".concat(i), false, {\n                fileName: \"/Users/brady/Code/tsg/Technology-Strategy-Group-Website/components/operate/BlueprintMicroGrid.tsx\",\n                lineNumber: 78,\n                columnNumber: 9\n            }, this));\n        }\n        return lines;\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: containerRef,\n        className: \"absolute inset-0 pointer-events-none overflow-hidden \".concat(className),\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n            className: \"w-full h-full text-white\",\n            viewBox: \"0 0 1200 800\",\n            preserveAspectRatio: \"xMidYMid slice\",\n            children: generateGridPattern()\n        }, void 0, false, {\n            fileName: \"/Users/brady/Code/tsg/Technology-Strategy-Group-Website/components/operate/BlueprintMicroGrid.tsx\",\n            lineNumber: 99,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/brady/Code/tsg/Technology-Strategy-Group-Website/components/operate/BlueprintMicroGrid.tsx\",\n        lineNumber: 95,\n        columnNumber: 5\n    }, this);\n}\n_s(BlueprintMicroGrid, \"ZPoL1qNsLGDANWfifMPxB108mHs=\");\n_c = BlueprintMicroGrid;\nvar _c;\n$RefreshReg$(_c, \"BlueprintMicroGrid\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvb3BlcmF0ZS9CbHVlcHJpbnRNaWNyb0dyaWQudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUVtRDtBQVM1QyxTQUFTRyxtQkFBbUIsS0FLVDtRQUxTLEVBQ2pDQyxZQUFZLEVBQUUsRUFDZEMsVUFBVSxHQUFHLEVBQ2JDLGlCQUFpQixDQUFDLEVBQ2xCQyxVQUFVLEVBQUUsRUFDWSxHQUxTOztJQU1qQyxNQUFNLENBQUNDLFNBQVNDLFdBQVcsR0FBR1AsK0NBQVFBLENBQUM7SUFDdkMsTUFBTVEsZUFBZVQsNkNBQU1BLENBQWlCO0lBRTVDRCxnREFBU0EsQ0FBQztRQUNSLE1BQU1XLGVBQWU7WUFDbkIsSUFBSUQsYUFBYUUsT0FBTyxFQUFFO2dCQUN4QixNQUFNQyxPQUFPSCxhQUFhRSxPQUFPLENBQUNFLHFCQUFxQjtnQkFDdkQsTUFBTUMsYUFBYUYsS0FBS0csR0FBRztnQkFDM0IsTUFBTUMsZ0JBQWdCSixLQUFLSyxNQUFNO2dCQUNqQyxNQUFNQyxlQUFlQyxPQUFPQyxXQUFXO2dCQUV2QywyQ0FBMkM7Z0JBQzNDLElBQUlOLGFBQWFJLGdCQUFnQkosYUFBYUUsZ0JBQWdCLEdBQUc7b0JBQy9ELE1BQU1LLFdBQVdDLEtBQUtDLEdBQUcsQ0FBQyxHQUFHRCxLQUFLRSxHQUFHLENBQUMsR0FBRyxDQUFDTixlQUFlSixVQUFTLElBQU1JLENBQUFBLGVBQWVGLGFBQVk7b0JBQ25HUixXQUFXYSxXQUFXaEI7Z0JBQ3hCO1lBQ0Y7UUFDRjtRQUVBLHlCQUF5QjtRQUN6QixJQUFJb0IsVUFBVTtRQUNkLE1BQU1DLGtCQUFrQjtZQUN0QixJQUFJLENBQUNELFNBQVM7Z0JBQ1pFLHNCQUFzQjtvQkFDcEJqQjtvQkFDQWUsVUFBVTtnQkFDWjtnQkFDQUEsVUFBVTtZQUNaO1FBQ0Y7UUFFQU4sT0FBT1MsZ0JBQWdCLENBQUMsVUFBVUYsaUJBQWlCO1lBQUVHLFNBQVM7UUFBSztRQUNuRSxPQUFPLElBQU1WLE9BQU9XLG1CQUFtQixDQUFDLFVBQVVKO0lBQ3BELEdBQUc7UUFBQ3JCO0tBQWU7SUFFbkIsa0NBQWtDO0lBQ2xDLE1BQU0wQixzQkFBc0I7UUFDMUIsTUFBTUMsUUFBUSxFQUFFO1FBQ2hCLE1BQU1DLE9BQU9YLEtBQUtZLElBQUksQ0FBQyxPQUFPNUI7UUFDOUIsTUFBTTZCLE9BQU9iLEtBQUtZLElBQUksQ0FBQyxNQUFNNUI7UUFFN0IsaUJBQWlCO1FBQ2pCLElBQUssSUFBSThCLElBQUksR0FBR0EsS0FBS0gsTUFBTUcsSUFBSztZQUM5QkosTUFBTUssSUFBSSxlQUNSLDhEQUFDQztnQkFFQ0MsSUFBSUgsSUFBSTlCO2dCQUNSa0MsSUFBSTtnQkFDSkMsSUFBSUwsSUFBSTlCO2dCQUNSb0MsSUFBSTtnQkFDSkMsUUFBTztnQkFDUEMsYUFBWTtnQkFDWnhDLFNBQVNBO2VBUEosS0FBTyxPQUFGZ0M7Ozs7O1FBVWhCO1FBRUEsbUJBQW1CO1FBQ25CLElBQUssSUFBSUEsSUFBSSxHQUFHQSxLQUFLRCxNQUFNQyxJQUFLO1lBQzlCSixNQUFNSyxJQUFJLGVBQ1IsOERBQUNDO2dCQUVDQyxJQUFJO2dCQUNKQyxJQUFJSixJQUFJOUIsVUFBVUM7Z0JBQ2xCa0MsSUFBSTtnQkFDSkMsSUFBSU4sSUFBSTlCLFVBQVVDO2dCQUNsQm9DLFFBQU87Z0JBQ1BDLGFBQVk7Z0JBQ1p4QyxTQUFTQTtlQVBKLEtBQU8sT0FBRmdDOzs7OztRQVVoQjtRQUVBLE9BQU9KO0lBQ1Q7SUFFQSxxQkFDRSw4REFBQ2E7UUFDQ0MsS0FBS3JDO1FBQ0xOLFdBQVcsd0RBQWtFLE9BQVZBO2tCQUVuRSw0RUFBQzRDO1lBQ0M1QyxXQUFVO1lBQ1Y2QyxTQUFRO1lBQ1JDLHFCQUFvQjtzQkFFbkJsQjs7Ozs7Ozs7Ozs7QUFJVDtHQWhHZ0I3QjtLQUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL29wZXJhdGUvQmx1ZXByaW50TWljcm9HcmlkLnRzeD85Y2MxIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50J1xuXG5pbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVJlZiwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCdcblxuaW50ZXJmYWNlIEJsdWVwcmludE1pY3JvR3JpZFByb3BzIHtcbiAgY2xhc3NOYW1lPzogc3RyaW5nXG4gIG9wYWNpdHk/OiBudW1iZXJcbiAgcGFyYWxsYXhPZmZzZXQ/OiBudW1iZXJcbiAgc3BhY2luZz86IG51bWJlclxufVxuXG5leHBvcnQgZnVuY3Rpb24gQmx1ZXByaW50TWljcm9HcmlkKHsgXG4gIGNsYXNzTmFtZSA9ICcnLCBcbiAgb3BhY2l0eSA9IDAuNCxcbiAgcGFyYWxsYXhPZmZzZXQgPSAyLFxuICBzcGFjaW5nID0gMjBcbn06IEJsdWVwcmludE1pY3JvR3JpZFByb3BzKSB7XG4gIGNvbnN0IFtzY3JvbGxZLCBzZXRTY3JvbGxZXSA9IHVzZVN0YXRlKDApXG4gIGNvbnN0IGNvbnRhaW5lclJlZiA9IHVzZVJlZjxIVE1MRGl2RWxlbWVudD4obnVsbClcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IGhhbmRsZVNjcm9sbCA9ICgpID0+IHtcbiAgICAgIGlmIChjb250YWluZXJSZWYuY3VycmVudCkge1xuICAgICAgICBjb25zdCByZWN0ID0gY29udGFpbmVyUmVmLmN1cnJlbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KClcbiAgICAgICAgY29uc3QgZWxlbWVudFRvcCA9IHJlY3QudG9wXG4gICAgICAgIGNvbnN0IGVsZW1lbnRIZWlnaHQgPSByZWN0LmhlaWdodFxuICAgICAgICBjb25zdCB3aW5kb3dIZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHRcbiAgICAgICAgXG4gICAgICAgIC8vIE9ubHkgYW5pbWF0ZSB3aGVuIGVsZW1lbnQgaXMgaW4gdmlld3BvcnRcbiAgICAgICAgaWYgKGVsZW1lbnRUb3AgPCB3aW5kb3dIZWlnaHQgJiYgZWxlbWVudFRvcCArIGVsZW1lbnRIZWlnaHQgPiAwKSB7XG4gICAgICAgICAgY29uc3QgcHJvZ3Jlc3MgPSBNYXRoLm1heCgwLCBNYXRoLm1pbigxLCAod2luZG93SGVpZ2h0IC0gZWxlbWVudFRvcCkgLyAod2luZG93SGVpZ2h0ICsgZWxlbWVudEhlaWdodCkpKVxuICAgICAgICAgIHNldFNjcm9sbFkocHJvZ3Jlc3MgKiBwYXJhbGxheE9mZnNldClcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIFRocm90dGxlIHNjcm9sbCBldmVudHNcbiAgICBsZXQgdGlja2luZyA9IGZhbHNlXG4gICAgY29uc3QgdGhyb3R0bGVkU2Nyb2xsID0gKCkgPT4ge1xuICAgICAgaWYgKCF0aWNraW5nKSB7XG4gICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB7XG4gICAgICAgICAgaGFuZGxlU2Nyb2xsKClcbiAgICAgICAgICB0aWNraW5nID0gZmFsc2VcbiAgICAgICAgfSlcbiAgICAgICAgdGlja2luZyA9IHRydWVcbiAgICAgIH1cbiAgICB9XG5cbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgdGhyb3R0bGVkU2Nyb2xsLCB7IHBhc3NpdmU6IHRydWUgfSlcbiAgICByZXR1cm4gKCkgPT4gd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIHRocm90dGxlZFNjcm9sbClcbiAgfSwgW3BhcmFsbGF4T2Zmc2V0XSlcblxuICAvLyBHZW5lcmF0ZSBibHVlcHJpbnQgZ3JpZCBwYXR0ZXJuXG4gIGNvbnN0IGdlbmVyYXRlR3JpZFBhdHRlcm4gPSAoKSA9PiB7XG4gICAgY29uc3QgbGluZXMgPSBbXVxuICAgIGNvbnN0IGNvbHMgPSBNYXRoLmNlaWwoMTIwMCAvIHNwYWNpbmcpXG4gICAgY29uc3Qgcm93cyA9IE1hdGguY2VpbCg4MDAgLyBzcGFjaW5nKVxuICAgIFxuICAgIC8vIFZlcnRpY2FsIGxpbmVzXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPD0gY29sczsgaSsrKSB7XG4gICAgICBsaW5lcy5wdXNoKFxuICAgICAgICA8bGluZVxuICAgICAgICAgIGtleT17YHYtJHtpfWB9XG4gICAgICAgICAgeDE9e2kgKiBzcGFjaW5nfVxuICAgICAgICAgIHkxPXswfVxuICAgICAgICAgIHgyPXtpICogc3BhY2luZ31cbiAgICAgICAgICB5Mj17ODAwfVxuICAgICAgICAgIHN0cm9rZT1cImN1cnJlbnRDb2xvclwiXG4gICAgICAgICAgc3Ryb2tlV2lkdGg9XCIwLjVcIlxuICAgICAgICAgIG9wYWNpdHk9e29wYWNpdHl9XG4gICAgICAgIC8+XG4gICAgICApXG4gICAgfVxuICAgIFxuICAgIC8vIEhvcml6b250YWwgbGluZXNcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8PSByb3dzOyBpKyspIHtcbiAgICAgIGxpbmVzLnB1c2goXG4gICAgICAgIDxsaW5lXG4gICAgICAgICAga2V5PXtgaC0ke2l9YH1cbiAgICAgICAgICB4MT17MH1cbiAgICAgICAgICB5MT17aSAqIHNwYWNpbmcgKyBzY3JvbGxZfVxuICAgICAgICAgIHgyPXsxMjAwfVxuICAgICAgICAgIHkyPXtpICogc3BhY2luZyArIHNjcm9sbFl9XG4gICAgICAgICAgc3Ryb2tlPVwiY3VycmVudENvbG9yXCJcbiAgICAgICAgICBzdHJva2VXaWR0aD1cIjAuNVwiXG4gICAgICAgICAgb3BhY2l0eT17b3BhY2l0eX1cbiAgICAgICAgLz5cbiAgICAgIClcbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIGxpbmVzXG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxkaXYgXG4gICAgICByZWY9e2NvbnRhaW5lclJlZn1cbiAgICAgIGNsYXNzTmFtZT17YGFic29sdXRlIGluc2V0LTAgcG9pbnRlci1ldmVudHMtbm9uZSBvdmVyZmxvdy1oaWRkZW4gJHtjbGFzc05hbWV9YH1cbiAgICA+XG4gICAgICA8c3ZnIFxuICAgICAgICBjbGFzc05hbWU9XCJ3LWZ1bGwgaC1mdWxsIHRleHQtd2hpdGVcIiBcbiAgICAgICAgdmlld0JveD1cIjAgMCAxMjAwIDgwMFwiXG4gICAgICAgIHByZXNlcnZlQXNwZWN0UmF0aW89XCJ4TWlkWU1pZCBzbGljZVwiXG4gICAgICA+XG4gICAgICAgIHtnZW5lcmF0ZUdyaWRQYXR0ZXJuKCl9XG4gICAgICA8L3N2Zz5cbiAgICA8L2Rpdj5cbiAgKVxufVxuIl0sIm5hbWVzIjpbInVzZUVmZmVjdCIsInVzZVJlZiIsInVzZVN0YXRlIiwiQmx1ZXByaW50TWljcm9HcmlkIiwiY2xhc3NOYW1lIiwib3BhY2l0eSIsInBhcmFsbGF4T2Zmc2V0Iiwic3BhY2luZyIsInNjcm9sbFkiLCJzZXRTY3JvbGxZIiwiY29udGFpbmVyUmVmIiwiaGFuZGxlU2Nyb2xsIiwiY3VycmVudCIsInJlY3QiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJlbGVtZW50VG9wIiwidG9wIiwiZWxlbWVudEhlaWdodCIsImhlaWdodCIsIndpbmRvd0hlaWdodCIsIndpbmRvdyIsImlubmVySGVpZ2h0IiwicHJvZ3Jlc3MiLCJNYXRoIiwibWF4IiwibWluIiwidGlja2luZyIsInRocm90dGxlZFNjcm9sbCIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJwYXNzaXZlIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImdlbmVyYXRlR3JpZFBhdHRlcm4iLCJsaW5lcyIsImNvbHMiLCJjZWlsIiwicm93cyIsImkiLCJwdXNoIiwibGluZSIsIngxIiwieTEiLCJ4MiIsInkyIiwic3Ryb2tlIiwic3Ryb2tlV2lkdGgiLCJkaXYiLCJyZWYiLCJzdmciLCJ2aWV3Qm94IiwicHJlc2VydmVBc3BlY3RSYXRpbyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/operate/BlueprintMicroGrid.tsx\n"));

/***/ })

});