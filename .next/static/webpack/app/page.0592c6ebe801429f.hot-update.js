"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/operate/BlueprintMicroGrid.tsx":
/*!***************************************************!*\
  !*** ./components/operate/BlueprintMicroGrid.tsx ***!
  \***************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BlueprintMicroGrid: function() { return /* binding */ BlueprintMicroGrid; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ BlueprintMicroGrid auto */ \nfunction BlueprintMicroGrid(param) {\n    let { className = \"\", opacity = 0.08, parallaxOffset = 0, spacing = 20 } = param;\n    // Generate clean blueprint grid pattern\n    const generateBlueprintPattern = ()=>{\n        const elements = [];\n        // Main grid lines\n        const cols = Math.ceil(1200 / spacing);\n        const rows = Math.ceil(800 / spacing);\n        // Vertical lines\n        for(let i = 0; i <= cols; i++){\n            elements.push(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"line\", {\n                x1: i * spacing,\n                y1: 0,\n                x2: i * spacing,\n                y2: 800,\n                stroke: \"currentColor\",\n                strokeWidth: \"1\",\n                opacity: opacity\n            }, \"v-\".concat(i), false, {\n                fileName: \"/Users/brady/Code/tsg/Technology-Strategy-Group-Website/components/operate/BlueprintMicroGrid.tsx\",\n                lineNumber: 30,\n                columnNumber: 9\n            }, this));\n        }\n        // Horizontal lines\n        for(let i = 0; i <= rows; i++){\n            elements.push(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"line\", {\n                x1: 0,\n                y1: i * spacing + scrollY,\n                x2: 1200,\n                y2: i * spacing + scrollY,\n                stroke: \"currentColor\",\n                strokeWidth: \"1\",\n                opacity: opacity\n            }, \"h-\".concat(i), false, {\n                fileName: \"/Users/brady/Code/tsg/Technology-Strategy-Group-Website/components/operate/BlueprintMicroGrid.tsx\",\n                lineNumber: 46,\n                columnNumber: 9\n            }, this));\n        }\n        // Diagonal lines - simple pattern\n        const diagonalSpacing = spacing * 2;\n        for(let i = 0; i < 1200; i += diagonalSpacing){\n            for(let j = 0; j < 800; j += diagonalSpacing){\n                // Diagonal from top-left to bottom-right\n                elements.push(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"line\", {\n                    x1: i,\n                    y1: j,\n                    x2: i + diagonalSpacing,\n                    y2: j + diagonalSpacing,\n                    stroke: \"currentColor\",\n                    strokeWidth: \"0.8\",\n                    opacity: opacity * 0.7\n                }, \"diag1-\".concat(i, \"-\").concat(j), false, {\n                    fileName: \"/Users/brady/Code/tsg/Technology-Strategy-Group-Website/components/operate/BlueprintMicroGrid.tsx\",\n                    lineNumber: 65,\n                    columnNumber: 11\n                }, this));\n                // Diagonal from top-right to bottom-left\n                elements.push(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"line\", {\n                    x1: i + diagonalSpacing,\n                    y1: j,\n                    x2: i,\n                    y2: j + diagonalSpacing,\n                    stroke: \"currentColor\",\n                    strokeWidth: \"0.8\",\n                    opacity: opacity * 0.7\n                }, \"diag2-\".concat(i, \"-\").concat(j), false, {\n                    fileName: \"/Users/brady/Code/tsg/Technology-Strategy-Group-Website/components/operate/BlueprintMicroGrid.tsx\",\n                    lineNumber: 79,\n                    columnNumber: 11\n                }, this));\n            }\n        }\n        return elements;\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: containerRef,\n        className: \"absolute inset-0 pointer-events-none overflow-hidden \".concat(className),\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n            className: \"w-full h-full text-white\",\n            viewBox: \"0 0 1200 800\",\n            preserveAspectRatio: \"xMidYMid slice\",\n            children: generateBlueprintPattern()\n        }, void 0, false, {\n            fileName: \"/Users/brady/Code/tsg/Technology-Strategy-Group-Website/components/operate/BlueprintMicroGrid.tsx\",\n            lineNumber: 101,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/brady/Code/tsg/Technology-Strategy-Group-Website/components/operate/BlueprintMicroGrid.tsx\",\n        lineNumber: 97,\n        columnNumber: 5\n    }, this);\n}\n_c = BlueprintMicroGrid;\nvar _c;\n$RefreshReg$(_c, \"BlueprintMicroGrid\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvb3BlcmF0ZS9CbHVlcHJpbnRNaWNyb0dyaWQudHN4IiwibWFwcGluZ3MiOiI7Ozs7OztBQVdPLFNBQVNBLG1CQUFtQixLQUtUO1FBTFMsRUFDakNDLFlBQVksRUFBRSxFQUNkQyxVQUFVLElBQUksRUFDZEMsaUJBQWlCLENBQUMsRUFDbEJDLFVBQVUsRUFBRSxFQUNZLEdBTFM7SUFPakMsd0NBQXdDO0lBQ3hDLE1BQU1DLDJCQUEyQjtRQUMvQixNQUFNQyxXQUFXLEVBQUU7UUFFbkIsa0JBQWtCO1FBQ2xCLE1BQU1DLE9BQU9DLEtBQUtDLElBQUksQ0FBQyxPQUFPTDtRQUM5QixNQUFNTSxPQUFPRixLQUFLQyxJQUFJLENBQUMsTUFBTUw7UUFFN0IsaUJBQWlCO1FBQ2pCLElBQUssSUFBSU8sSUFBSSxHQUFHQSxLQUFLSixNQUFNSSxJQUFLO1lBQzlCTCxTQUFTTSxJQUFJLGVBQ1gsOERBQUNDO2dCQUVDQyxJQUFJSCxJQUFJUDtnQkFDUlcsSUFBSTtnQkFDSkMsSUFBSUwsSUFBSVA7Z0JBQ1JhLElBQUk7Z0JBQ0pDLFFBQU87Z0JBQ1BDLGFBQVk7Z0JBQ1pqQixTQUFTQTtlQVBKLEtBQU8sT0FBRlM7Ozs7O1FBVWhCO1FBRUEsbUJBQW1CO1FBQ25CLElBQUssSUFBSUEsSUFBSSxHQUFHQSxLQUFLRCxNQUFNQyxJQUFLO1lBQzlCTCxTQUFTTSxJQUFJLGVBQ1gsOERBQUNDO2dCQUVDQyxJQUFJO2dCQUNKQyxJQUFJSixJQUFJUCxVQUFVZ0I7Z0JBQ2xCSixJQUFJO2dCQUNKQyxJQUFJTixJQUFJUCxVQUFVZ0I7Z0JBQ2xCRixRQUFPO2dCQUNQQyxhQUFZO2dCQUNaakIsU0FBU0E7ZUFQSixLQUFPLE9BQUZTOzs7OztRQVVoQjtRQUVBLGtDQUFrQztRQUNsQyxNQUFNVSxrQkFBa0JqQixVQUFVO1FBQ2xDLElBQUssSUFBSU8sSUFBSSxHQUFHQSxJQUFJLE1BQU1BLEtBQUtVLGdCQUFpQjtZQUM5QyxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSSxLQUFLQSxLQUFLRCxnQkFBaUI7Z0JBQzdDLHlDQUF5QztnQkFDekNmLFNBQVNNLElBQUksZUFDWCw4REFBQ0M7b0JBRUNDLElBQUlIO29CQUNKSSxJQUFJTztvQkFDSk4sSUFBSUwsSUFBSVU7b0JBQ1JKLElBQUlLLElBQUlEO29CQUNSSCxRQUFPO29CQUNQQyxhQUFZO29CQUNaakIsU0FBU0EsVUFBVTttQkFQZCxTQUFjb0IsT0FBTFgsR0FBRSxLQUFLLE9BQUZXOzs7OztnQkFXdkIseUNBQXlDO2dCQUN6Q2hCLFNBQVNNLElBQUksZUFDWCw4REFBQ0M7b0JBRUNDLElBQUlILElBQUlVO29CQUNSTixJQUFJTztvQkFDSk4sSUFBSUw7b0JBQ0pNLElBQUlLLElBQUlEO29CQUNSSCxRQUFPO29CQUNQQyxhQUFZO29CQUNaakIsU0FBU0EsVUFBVTttQkFQZCxTQUFjb0IsT0FBTFgsR0FBRSxLQUFLLE9BQUZXOzs7OztZQVV6QjtRQUNGO1FBRUEsT0FBT2hCO0lBQ1Q7SUFFQSxxQkFDRSw4REFBQ2lCO1FBQ0NDLEtBQUtDO1FBQ0x4QixXQUFXLHdEQUFrRSxPQUFWQTtrQkFFbkUsNEVBQUN5QjtZQUNDekIsV0FBVTtZQUNWMEIsU0FBUTtZQUNSQyxxQkFBb0I7c0JBRW5CdkI7Ozs7Ozs7Ozs7O0FBSVQ7S0FsR2dCTCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL29wZXJhdGUvQmx1ZXByaW50TWljcm9HcmlkLnRzeD85Y2MxIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50J1xuXG5pbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVJlZiwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCdcblxuaW50ZXJmYWNlIEJsdWVwcmludE1pY3JvR3JpZFByb3BzIHtcbiAgY2xhc3NOYW1lPzogc3RyaW5nXG4gIG9wYWNpdHk/OiBudW1iZXJcbiAgcGFyYWxsYXhPZmZzZXQ/OiBudW1iZXJcbiAgc3BhY2luZz86IG51bWJlclxufVxuXG5leHBvcnQgZnVuY3Rpb24gQmx1ZXByaW50TWljcm9HcmlkKHsgXG4gIGNsYXNzTmFtZSA9ICcnLCBcbiAgb3BhY2l0eSA9IDAuMDgsXG4gIHBhcmFsbGF4T2Zmc2V0ID0gMCxcbiAgc3BhY2luZyA9IDIwXG59OiBCbHVlcHJpbnRNaWNyb0dyaWRQcm9wcykge1xuXG4gIC8vIEdlbmVyYXRlIGNsZWFuIGJsdWVwcmludCBncmlkIHBhdHRlcm5cbiAgY29uc3QgZ2VuZXJhdGVCbHVlcHJpbnRQYXR0ZXJuID0gKCkgPT4ge1xuICAgIGNvbnN0IGVsZW1lbnRzID0gW11cbiAgICBcbiAgICAvLyBNYWluIGdyaWQgbGluZXNcbiAgICBjb25zdCBjb2xzID0gTWF0aC5jZWlsKDEyMDAgLyBzcGFjaW5nKVxuICAgIGNvbnN0IHJvd3MgPSBNYXRoLmNlaWwoODAwIC8gc3BhY2luZylcbiAgICBcbiAgICAvLyBWZXJ0aWNhbCBsaW5lc1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDw9IGNvbHM7IGkrKykge1xuICAgICAgZWxlbWVudHMucHVzaChcbiAgICAgICAgPGxpbmVcbiAgICAgICAgICBrZXk9e2B2LSR7aX1gfVxuICAgICAgICAgIHgxPXtpICogc3BhY2luZ31cbiAgICAgICAgICB5MT17MH1cbiAgICAgICAgICB4Mj17aSAqIHNwYWNpbmd9XG4gICAgICAgICAgeTI9ezgwMH1cbiAgICAgICAgICBzdHJva2U9XCJjdXJyZW50Q29sb3JcIlxuICAgICAgICAgIHN0cm9rZVdpZHRoPVwiMVwiXG4gICAgICAgICAgb3BhY2l0eT17b3BhY2l0eX1cbiAgICAgICAgLz5cbiAgICAgIClcbiAgICB9XG4gICAgXG4gICAgLy8gSG9yaXpvbnRhbCBsaW5lc1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDw9IHJvd3M7IGkrKykge1xuICAgICAgZWxlbWVudHMucHVzaChcbiAgICAgICAgPGxpbmVcbiAgICAgICAgICBrZXk9e2BoLSR7aX1gfVxuICAgICAgICAgIHgxPXswfVxuICAgICAgICAgIHkxPXtpICogc3BhY2luZyArIHNjcm9sbFl9XG4gICAgICAgICAgeDI9ezEyMDB9XG4gICAgICAgICAgeTI9e2kgKiBzcGFjaW5nICsgc2Nyb2xsWX1cbiAgICAgICAgICBzdHJva2U9XCJjdXJyZW50Q29sb3JcIlxuICAgICAgICAgIHN0cm9rZVdpZHRoPVwiMVwiXG4gICAgICAgICAgb3BhY2l0eT17b3BhY2l0eX1cbiAgICAgICAgLz5cbiAgICAgIClcbiAgICB9XG4gICAgXG4gICAgLy8gRGlhZ29uYWwgbGluZXMgLSBzaW1wbGUgcGF0dGVyblxuICAgIGNvbnN0IGRpYWdvbmFsU3BhY2luZyA9IHNwYWNpbmcgKiAyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCAxMjAwOyBpICs9IGRpYWdvbmFsU3BhY2luZykge1xuICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCA4MDA7IGogKz0gZGlhZ29uYWxTcGFjaW5nKSB7XG4gICAgICAgIC8vIERpYWdvbmFsIGZyb20gdG9wLWxlZnQgdG8gYm90dG9tLXJpZ2h0XG4gICAgICAgIGVsZW1lbnRzLnB1c2goXG4gICAgICAgICAgPGxpbmVcbiAgICAgICAgICAgIGtleT17YGRpYWcxLSR7aX0tJHtqfWB9XG4gICAgICAgICAgICB4MT17aX1cbiAgICAgICAgICAgIHkxPXtqfVxuICAgICAgICAgICAgeDI9e2kgKyBkaWFnb25hbFNwYWNpbmd9XG4gICAgICAgICAgICB5Mj17aiArIGRpYWdvbmFsU3BhY2luZ31cbiAgICAgICAgICAgIHN0cm9rZT1cImN1cnJlbnRDb2xvclwiXG4gICAgICAgICAgICBzdHJva2VXaWR0aD1cIjAuOFwiXG4gICAgICAgICAgICBvcGFjaXR5PXtvcGFjaXR5ICogMC43fVxuICAgICAgICAgIC8+XG4gICAgICAgIClcbiAgICAgICAgXG4gICAgICAgIC8vIERpYWdvbmFsIGZyb20gdG9wLXJpZ2h0IHRvIGJvdHRvbS1sZWZ0XG4gICAgICAgIGVsZW1lbnRzLnB1c2goXG4gICAgICAgICAgPGxpbmVcbiAgICAgICAgICAgIGtleT17YGRpYWcyLSR7aX0tJHtqfWB9XG4gICAgICAgICAgICB4MT17aSArIGRpYWdvbmFsU3BhY2luZ31cbiAgICAgICAgICAgIHkxPXtqfVxuICAgICAgICAgICAgeDI9e2l9XG4gICAgICAgICAgICB5Mj17aiArIGRpYWdvbmFsU3BhY2luZ31cbiAgICAgICAgICAgIHN0cm9rZT1cImN1cnJlbnRDb2xvclwiXG4gICAgICAgICAgICBzdHJva2VXaWR0aD1cIjAuOFwiXG4gICAgICAgICAgICBvcGFjaXR5PXtvcGFjaXR5ICogMC43fVxuICAgICAgICAgIC8+XG4gICAgICAgIClcbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgcmV0dXJuIGVsZW1lbnRzXG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxkaXYgXG4gICAgICByZWY9e2NvbnRhaW5lclJlZn1cbiAgICAgIGNsYXNzTmFtZT17YGFic29sdXRlIGluc2V0LTAgcG9pbnRlci1ldmVudHMtbm9uZSBvdmVyZmxvdy1oaWRkZW4gJHtjbGFzc05hbWV9YH1cbiAgICA+XG4gICAgICA8c3ZnIFxuICAgICAgICBjbGFzc05hbWU9XCJ3LWZ1bGwgaC1mdWxsIHRleHQtd2hpdGVcIiBcbiAgICAgICAgdmlld0JveD1cIjAgMCAxMjAwIDgwMFwiXG4gICAgICAgIHByZXNlcnZlQXNwZWN0UmF0aW89XCJ4TWlkWU1pZCBzbGljZVwiXG4gICAgICA+XG4gICAgICAgIHtnZW5lcmF0ZUJsdWVwcmludFBhdHRlcm4oKX1cbiAgICAgIDwvc3ZnPlxuICAgIDwvZGl2PlxuICApXG59XG4iXSwibmFtZXMiOlsiQmx1ZXByaW50TWljcm9HcmlkIiwiY2xhc3NOYW1lIiwib3BhY2l0eSIsInBhcmFsbGF4T2Zmc2V0Iiwic3BhY2luZyIsImdlbmVyYXRlQmx1ZXByaW50UGF0dGVybiIsImVsZW1lbnRzIiwiY29scyIsIk1hdGgiLCJjZWlsIiwicm93cyIsImkiLCJwdXNoIiwibGluZSIsIngxIiwieTEiLCJ4MiIsInkyIiwic3Ryb2tlIiwic3Ryb2tlV2lkdGgiLCJzY3JvbGxZIiwiZGlhZ29uYWxTcGFjaW5nIiwiaiIsImRpdiIsInJlZiIsImNvbnRhaW5lclJlZiIsInN2ZyIsInZpZXdCb3giLCJwcmVzZXJ2ZUFzcGVjdFJhdGlvIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/operate/BlueprintMicroGrid.tsx\n"));

/***/ })

});