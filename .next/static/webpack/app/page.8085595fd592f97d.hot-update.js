"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/operate/BlueprintMicroGrid.tsx":
/*!***************************************************!*\
  !*** ./components/operate/BlueprintMicroGrid.tsx ***!
  \***************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BlueprintMicroGrid: function() { return /* binding */ BlueprintMicroGrid; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ BlueprintMicroGrid auto */ \nvar _s = $RefreshSig$();\n\nfunction BlueprintMicroGrid(param) {\n    let { className = \"\", opacity = 0.15, parallaxOffset = 2, spacing = 20 } = param;\n    _s();\n    const [scrollY, setScrollY] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const containerRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const handleScroll = ()=>{\n            if (containerRef.current) {\n                const rect = containerRef.current.getBoundingClientRect();\n                const elementTop = rect.top;\n                const elementHeight = rect.height;\n                const windowHeight = window.innerHeight;\n                // Only animate when element is in viewport\n                if (elementTop < windowHeight && elementTop + elementHeight > 0) {\n                    const progress = Math.max(0, Math.min(1, (windowHeight - elementTop) / (windowHeight + elementHeight)));\n                    setScrollY(progress * parallaxOffset);\n                }\n            }\n        };\n        // Throttle scroll events\n        let ticking = false;\n        const throttledScroll = ()=>{\n            if (!ticking) {\n                requestAnimationFrame(()=>{\n                    handleScroll();\n                    ticking = false;\n                });\n                ticking = true;\n            }\n        };\n        window.addEventListener(\"scroll\", throttledScroll, {\n            passive: true\n        });\n        return ()=>window.removeEventListener(\"scroll\", throttledScroll);\n    }, [\n        parallaxOffset\n    ]);\n    // Generate complex blueprint pattern with technical elements\n    const generateBlueprintPattern = ()=>{\n        const elements = [];\n        // Main grid\n        const cols = Math.ceil(1200 / spacing);\n        const rows = Math.ceil(800 / spacing);\n        // Vertical lines\n        for(let i = 0; i <= cols; i++){\n            elements.push(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"line\", {\n                x1: i * spacing,\n                y1: 0,\n                x2: i * spacing,\n                y2: 800,\n                stroke: \"currentColor\",\n                strokeWidth: \"0.5\",\n                opacity: opacity * 0.6\n            }, \"v-\".concat(i), false, {\n                fileName: \"/Users/brady/Code/tsg/Technology-Strategy-Group-Website/components/operate/BlueprintMicroGrid.tsx\",\n                lineNumber: 64,\n                columnNumber: 9\n            }, this));\n        }\n        // Horizontal lines\n        for(let i = 0; i <= rows; i++){\n            elements.push(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"line\", {\n                x1: 0,\n                y1: i * spacing + scrollY,\n                x2: 1200,\n                y2: i * spacing + scrollY,\n                stroke: \"currentColor\",\n                strokeWidth: \"0.5\",\n                opacity: opacity * 0.6\n            }, \"h-\".concat(i), false, {\n                fileName: \"/Users/brady/Code/tsg/Technology-Strategy-Group-Website/components/operate/BlueprintMicroGrid.tsx\",\n                lineNumber: 80,\n                columnNumber: 9\n            }, this));\n        }\n        // Technical gears and mechanical elements\n        const gears = [\n            {\n                cx: 150,\n                cy: 120,\n                r: 40,\n                teeth: 12,\n                opacity: opacity * 0.8\n            },\n            {\n                cx: 1050,\n                cy: 680,\n                r: 35,\n                teeth: 10,\n                opacity: opacity * 0.7\n            },\n            {\n                cx: 300,\n                cy: 600,\n                r: 25,\n                teeth: 8,\n                opacity: opacity * 0.6\n            },\n            {\n                cx: 900,\n                cy: 200,\n                r: 30,\n                teeth: 9,\n                opacity: opacity * 0.7\n            }\n        ];\n        gears.forEach((gear, index)=>{\n            // Gear outer circle\n            elements.push(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                cx: gear.cx,\n                cy: gear.cy,\n                r: gear.r,\n                fill: \"none\",\n                stroke: \"currentColor\",\n                strokeWidth: \"1\",\n                opacity: gear.opacity\n            }, \"gear-outer-\".concat(index), false, {\n                fileName: \"/Users/brady/Code/tsg/Technology-Strategy-Group-Website/components/operate/BlueprintMicroGrid.tsx\",\n                lineNumber: 104,\n                columnNumber: 9\n            }, this));\n            // Gear teeth\n            for(let i = 0; i < gear.teeth; i++){\n                const angle = i * 360 / gear.teeth;\n                const x1 = gear.cx + Math.cos((angle - 10) * Math.PI / 180) * gear.r;\n                const y1 = gear.cy + Math.sin((angle - 10) * Math.PI / 180) * gear.r;\n                const x2 = gear.cx + Math.cos((angle + 10) * Math.PI / 180) * gear.r;\n                const y2 = gear.cy + Math.sin((angle + 10) * Math.PI / 180) * gear.r;\n                const x3 = gear.cx + Math.cos(angle * Math.PI / 180) * (gear.r + 8);\n                const y3 = gear.cy + Math.sin(angle * Math.PI / 180) * (gear.r + 8);\n                elements.push(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"polygon\", {\n                    points: \"\".concat(x1, \",\").concat(y1, \" \").concat(x2, \",\").concat(y2, \" \").concat(x3, \",\").concat(y3),\n                    fill: \"currentColor\",\n                    opacity: gear.opacity * 0.8\n                }, \"gear-tooth-\".concat(index, \"-\").concat(i), false, {\n                    fileName: \"/Users/brady/Code/tsg/Technology-Strategy-Group-Website/components/operate/BlueprintMicroGrid.tsx\",\n                    lineNumber: 127,\n                    columnNumber: 11\n                }, this));\n            }\n            // Gear center\n            elements.push(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                cx: gear.cx,\n                cy: gear.cy,\n                r: gear.r * 0.3,\n                fill: \"currentColor\",\n                opacity: gear.opacity * 0.9\n            }, \"gear-center-\".concat(index), false, {\n                fileName: \"/Users/brady/Code/tsg/Technology-Strategy-Group-Website/components/operate/BlueprintMicroGrid.tsx\",\n                lineNumber: 138,\n                columnNumber: 9\n            }, this));\n        });\n        // Circuit elements and connection lines\n        const circuits = [\n            {\n                x: 200,\n                y: 300,\n                connections: [\n                    400,\n                    500,\n                    600\n                ]\n            },\n            {\n                x: 800,\n                y: 400,\n                connections: [\n                    900,\n                    1000\n                ]\n            },\n            {\n                x: 500,\n                y: 200,\n                connections: [\n                    600,\n                    700\n                ]\n            }\n        ];\n        circuits.forEach((circuit, index)=>{\n            // Circuit nodes\n            elements.push(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"circle\", {\n                cx: circuit.x,\n                cy: circuit.y,\n                r: 3,\n                fill: \"currentColor\",\n                opacity: opacity * 0.9\n            }, \"circuit-node-\".concat(index), false, {\n                fileName: \"/Users/brady/Code/tsg/Technology-Strategy-Group-Website/components/operate/BlueprintMicroGrid.tsx\",\n                lineNumber: 159,\n                columnNumber: 9\n            }, this));\n            // Connection lines\n            circuit.connections.forEach((connX, connIndex)=>{\n                elements.push(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"line\", {\n                    x1: circuit.x,\n                    y1: circuit.y,\n                    x2: connX,\n                    y2: circuit.y + connIndex * 20,\n                    stroke: \"currentColor\",\n                    strokeWidth: \"1\",\n                    opacity: opacity * 0.7\n                }, \"circuit-line-\".concat(index, \"-\").concat(connIndex), false, {\n                    fileName: \"/Users/brady/Code/tsg/Technology-Strategy-Group-Website/components/operate/BlueprintMicroGrid.tsx\",\n                    lineNumber: 172,\n                    columnNumber: 11\n                }, this));\n                // Arrow heads\n                elements.push(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"polygon\", {\n                    points: \"\".concat(connX - 5, \",\").concat(circuit.y + connIndex * 20 - 3, \" \").concat(connX, \",\").concat(circuit.y + connIndex * 20, \" \").concat(connX - 5, \",\").concat(circuit.y + connIndex * 20 + 3),\n                    fill: \"currentColor\",\n                    opacity: opacity * 0.8\n                }, \"circuit-arrow-\".concat(index, \"-\").concat(connIndex), false, {\n                    fileName: \"/Users/brady/Code/tsg/Technology-Strategy-Group-Website/components/operate/BlueprintMicroGrid.tsx\",\n                    lineNumber: 186,\n                    columnNumber: 11\n                }, this));\n            });\n        });\n        // Technical rectangles and shapes\n        const shapes = [\n            {\n                x: 100,\n                y: 500,\n                width: 60,\n                height: 30,\n                opacity: opacity * 0.6\n            },\n            {\n                x: 1000,\n                y: 100,\n                width: 80,\n                height: 40,\n                opacity: opacity * 0.5\n            },\n            {\n                x: 600,\n                y: 650,\n                width: 50,\n                height: 25,\n                opacity: opacity * 0.7\n            }\n        ];\n        shapes.forEach((shape, index)=>{\n            elements.push(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"rect\", {\n                x: shape.x,\n                y: shape.y,\n                width: shape.width,\n                height: shape.height,\n                fill: \"none\",\n                stroke: \"currentColor\",\n                strokeWidth: \"1\",\n                opacity: shape.opacity\n            }, \"tech-shape-\".concat(index), false, {\n                fileName: \"/Users/brady/Code/tsg/Technology-Strategy-Group-Website/components/operate/BlueprintMicroGrid.tsx\",\n                lineNumber: 205,\n                columnNumber: 9\n            }, this));\n            // Inner cross pattern\n            elements.push(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"line\", {\n                x1: shape.x + shape.width / 2,\n                y1: shape.y,\n                x2: shape.x + shape.width / 2,\n                y2: shape.y + shape.height,\n                stroke: \"currentColor\",\n                strokeWidth: \"0.5\",\n                opacity: shape.opacity * 0.8\n            }, \"shape-cross-v-\".concat(index), false, {\n                fileName: \"/Users/brady/Code/tsg/Technology-Strategy-Group-Website/components/operate/BlueprintMicroGrid.tsx\",\n                lineNumber: 220,\n                columnNumber: 9\n            }, this));\n            elements.push(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"line\", {\n                x1: shape.x,\n                y1: shape.y + shape.height / 2,\n                x2: shape.x + shape.width,\n                y2: shape.y + shape.height / 2,\n                stroke: \"currentColor\",\n                strokeWidth: \"0.5\",\n                opacity: shape.opacity * 0.8\n            }, \"shape-cross-h-\".concat(index), false, {\n                fileName: \"/Users/brady/Code/tsg/Technology-Strategy-Group-Website/components/operate/BlueprintMicroGrid.tsx\",\n                lineNumber: 232,\n                columnNumber: 9\n            }, this));\n        });\n        return elements;\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: containerRef,\n        className: \"absolute inset-0 pointer-events-none overflow-hidden \".concat(className),\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n            className: \"w-full h-full text-white\",\n            viewBox: \"0 0 1200 800\",\n            preserveAspectRatio: \"xMidYMid slice\",\n            children: generateBlueprintPattern()\n        }, void 0, false, {\n            fileName: \"/Users/brady/Code/tsg/Technology-Strategy-Group-Website/components/operate/BlueprintMicroGrid.tsx\",\n            lineNumber: 253,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/brady/Code/tsg/Technology-Strategy-Group-Website/components/operate/BlueprintMicroGrid.tsx\",\n        lineNumber: 249,\n        columnNumber: 5\n    }, this);\n}\n_s(BlueprintMicroGrid, \"ZPoL1qNsLGDANWfifMPxB108mHs=\");\n_c = BlueprintMicroGrid;\nvar _c;\n$RefreshReg$(_c, \"BlueprintMicroGrid\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/operate/BlueprintMicroGrid.tsx\n"));

/***/ })

});